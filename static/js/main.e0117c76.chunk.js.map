{"version":3,"sources":["components/colorInput.js","helpers/themeHelper.js","components/theme.js","components/Checkbox.js","containers/promptCheckbox.js","components/prompt.js","helpers/requests.js","helpers/promptHelper.js","components/promptPreview.js","components/colorPreview.js","containers/preview.js","components/fileSelect.js","components/themeInfo.js","containers/build.js","components/browse.js","components/login.js","components/signup.js","components/siteInfo.js","containers/welcome.js","helpers/useInputChange.js","components/navBar.js","App.js","serviceWorker.js","index.js"],"names":["ColorInput","props","useState","showColorPicker","setShowColorPicker","name","label","value","handleChange","handleClick","styles","reactCSS","default","color","minWidth","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","id","style","onClick","onChange","colorLabels","createThemeAndFile","colors","format","themeObj","file","Blob","type","URL","createObjectURL","createFile","colorObj","termcolors","json","import","JSON","stringify","export","createTheme","createColorObj","colorArr","forEach","color_type","Theme","Object","keys","map","key","index","Checkbox","handleCheckbox","htmlFor","checked","PromptCheckbox","promptItems","checkboxValue","handlePromptInputs","promptItem","find","item","foreground","Prompt","checkboxes","username","hostname","workingDirectory","date","dayDD","time","militaryTime","baseURL","userURL","loginURL","themeURL","headers","Accepts","headersWithAuth","Authorization","localStorage","getItem","parseData","response","ok","Error","statusText","catchError","error","console","log","fetchTheme","fetch","then","catch","parsePromptItems","prompt","createZSHString","code","zshString","addOrRemovePromptItems","itemArr","some","i","filter","push","createPromptItemArr","items","promptArr","setCheckboxes","checkboxObj","addPromptColors","colorInput","split","colorType","findIndex","PromptPreview","backgroundColor","text","createPromptPreview","ColorPreview","className","Preview","Number","FileSelect","handleFileSelectChange","ThemeInfo","fileName","fileURL","promptCode","handleInputChange","handleSubmit","fileSelect","fileExtension","saveError","setSaveError","saveSuccess","setSaveSuccess","placeholder","terminalColors","method","body","theme","terminal_colorscheme","postTheme","message","readOnly","href","download","Build","state","renderThemeInputs","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","setTheme","setState","prompt_items","e","target","handleColorChange","hex","handlePromptItems","preventDefault","handleBoolean","themeId","this","match","params","React","Component","Browse","search","themes","filteredThemes","includes","to","Login","password","handleLogin","SignUp","newUsername","email","newPassword","handleSignUp","SiteInfo","Welcome","input","setInput","currentTarget","useInputChange","history","useHistory","loginErr","setLoginErr","signUpErr","setSignUpErr","user","setItem","jwt","NavBar","token","setToken","useEffect","clear","App","exact","path","component","Boolean","window","location","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0117c76.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport reactCSS from \"reactcss\";\nimport { SketchPicker } from \"react-color\";\n\nconst ColorInput = (props) => {\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const { name, label, value, handleChange } = props;\n\n  const handleClick = () => {\n    setShowColorPicker(!showColorPicker);\n  };\n\n  // const handleClose = () => {\n  //   setShowColorPicker(false);\n  // };\n\n  const styles = reactCSS({\n    default: {\n      color: {\n        minWidth: \"120px\",\n        height: \"14px\",\n        borderRadius: \"2px\",\n        background: `${value}`,\n      },\n      swatch: {\n        padding: \"5px\",\n        background: \"#fff\",\n        borderRadius: \"1px\",\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\n        display: \"inline-block\",\n        cursor: \"pointer\",\n      },\n      popover: {\n        position: \"absolute\",\n        zIndex: \"2\",\n      },\n      cover: {\n        position: \"fixed\",\n        top: \"0px\",\n        right: \"0px\",\n        bottom: \"0px\",\n        left: \"0px\",\n      },\n    },\n  });\n\n  return (\n    <>\n      {/* {<label htmlFor={name}>{label}</label>} */}\n      <div id=\"color-input\">\n        <div style={styles.swatch} onClick={handleClick}>\n          {label}\n          <div style={styles.color} />\n        </div>\n        {showColorPicker ? (\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={handleClick} />\n            <SketchPicker\n              color={value}\n              onChange={(color) => handleChange(color, name)}\n            />\n          </div>\n        ) : null}\n      </div>\n      <br />\n    </>\n  );\n};\n\nexport default ColorInput;\n","import termcolors from \"termcolors\";\n\n// label colors\nexport const colorLabels = [\n  \"Black:\",\n  \"Red:\",\n  \"Green:\",\n  \"Yellow:\",\n  \"Blue:\",\n  \"Magenta:\",\n  \"Cyan:\",\n  \"White:\",\n  \"Bright-Black:\",\n  \"Bright-Red:\",\n  \"Bright-Green:\",\n  \"Bright-Yellow:\",\n  \"Bright-Blue:\",\n  \"Bright-Magenta:\",\n  \"Bright-Cyan:\",\n  \"Bright-White:\",\n  \"Background:\",\n  \"Foreground:\",\n];\n\n// import colors object and export valid theme data in specified format\nexport const createTheme = (colors, format) => {\n  const colorObj = termcolors.json.import(JSON.stringify(colors));\n  // console.log(\"colors: \", colorObj);\n  // console.log(\"termcolors function: \", termcolors[format]);\n  return termcolors[format].export(colorObj);\n};\n\n// create file and return URL\nexport const createFile = (themeObj) => {\n  const file = new Blob([themeObj], {\n    type: \"text/plain\",\n  });\n  return URL.createObjectURL(file);\n};\n\nexport const createThemeAndFile = (colors, format) => {\n  const theme = createTheme(colors, format);\n  return createFile(theme);\n};\n\n// takes array of colors from db and returns a color object that can be used with react components\nexport const createColorObj = (colorArr) => {\n  const colorObj = {};\n  colorArr.forEach((color) => (colorObj[color.color_type] = color.color));\n  return colorObj;\n};\n","import React from \"react\";\nimport ColorInput from \"components/colorInput\";\nimport { colorLabels } from \"helpers/themeHelper\";\nimport \"styles/themecolors.css\";\n\nconst Theme = (props) => {\n  const { colors, handleChange } = props;\n  return (\n    <div>\n      <h1>Terminal Color Scheme</h1>\n      <div id=\"terminal-container\">\n        {Object.keys(colors).map((key, index) => (\n          <ColorInput\n            key={key}\n            name={key}\n            label={colorLabels[index]}\n            handleChange={handleChange}\n            value={colors[key]}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Theme;\n","import React from \"react\";\n\nconst Checkbox = (props) => {\n  const { name, label, value, handleCheckbox } = props;\n  return (\n    <>\n      <label htmlFor={name}>{label}</label>\n      <input\n        type=\"checkbox\"\n        name={name}\n        onChange={handleCheckbox}\n        checked={value}\n      />\n      <br />\n    </>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport Checkbox from \"components/Checkbox\";\nimport ColorInput from \"components/colorInput\";\n\nconst PromptCheckbox = (props) => {\n  const {\n    name,\n    label,\n    promptItems,\n    checkboxValue,\n    handlePromptInputs,\n    handleCheckbox,\n  } = props;\n  const promptItem = promptItems.find((item) => item.type === name);\n  // console.log(promptItem);\n  return (\n    <div>\n      <Checkbox\n        name={name}\n        label={label}\n        value={checkboxValue}\n        handleCheckbox={handleCheckbox}\n        handlePromptInputs={handlePromptInputs}\n      />\n      {checkboxValue ? (\n        <div>\n          <ColorInput\n            name={`${name} foreground`}\n            label=\"Foreground Color: \"\n            value={promptItem.foreground}\n            handleChange={handlePromptInputs}\n          />\n          <ColorInput\n            name={`${name} background`}\n            label=\"Background Color: \"\n            value={promptItem.background}\n            handleChange={handlePromptInputs}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PromptCheckbox;\n","import React from \"react\";\nimport PromptCheckbox from \"containers/promptCheckbox\";\nimport \"styles/prompt.css\";\n\nconst Prompt = (props) => {\n  const { handleCheckbox, handlePromptInputs, checkboxes, promptItems } = props;\n  return (\n    <div>\n      <h1>Prompt Options</h1>\n      <div id=\"prompt-options\">\n        <PromptCheckbox\n          name=\"username\"\n          label=\"Username \"\n          promptItems={promptItems}\n          handleCheckbox={handleCheckbox}\n          checkboxValue={checkboxes.username}\n          handlePromptInputs={handlePromptInputs}\n        />\n        <PromptCheckbox\n          name=\"hostname\"\n          label=\"Hostname \"\n          promptItems={promptItems}\n          handleCheckbox={handleCheckbox}\n          checkboxValue={checkboxes.hostname}\n          handlePromptInputs={handlePromptInputs}\n        />\n        <PromptCheckbox\n          name=\"workingDirectory\"\n          label=\"Working Directory \"\n          promptItems={promptItems}\n          handleCheckbox={handleCheckbox}\n          checkboxValue={checkboxes.workingDirectory}\n          handlePromptInputs={handlePromptInputs}\n        />\n        <PromptCheckbox\n          name=\"date\"\n          label=\"mm/dd/yy \"\n          promptItems={promptItems}\n          handleCheckbox={handleCheckbox}\n          checkboxValue={checkboxes.date}\n          handlePromptInputs={handlePromptInputs}\n        />\n        <PromptCheckbox\n          name=\"dayDD\"\n          label=\"day and dd \"\n          promptItems={promptItems}\n          handleCheckbox={handleCheckbox}\n          checkboxValue={checkboxes.dayDD}\n          handlePromptInputs={handlePromptInputs}\n        />\n        <PromptCheckbox\n          name=\"time\"\n          label=\"12-hour\"\n          promptItems={promptItems}\n          handleCheckbox={handleCheckbox}\n          checkboxValue={checkboxes.time}\n          handlePromptInputs={handlePromptInputs}\n        />\n        <PromptCheckbox\n          name=\"militaryTime\"\n          label=\"24-hour \"\n          promptItems={promptItems}\n          handleCheckbox={handleCheckbox}\n          checkboxValue={checkboxes.militaryTime}\n          handlePromptInputs={handlePromptInputs}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Prompt;\n","// // urls\nconst baseURL = \"https://terminal-drip.herokuapp.com/\";\nconst userURL = `${baseURL}/users/`;\nconst loginURL = `${baseURL}/login/`;\nconst themeURL = `${baseURL}/themes/`;\n\n// headers --> use these at your own discretion\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  Accepts: \"application/json\",\n};\n\nconst headersWithAuth = {\n  \"Content-Type\": \"application/json\",\n  Accepts: \"application/json\",\n  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n};\n\n// parse incoming data\nconst parseData = (response) => {\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return response.json();\n};\n// error handler\nconst catchError = (error) => console.log(`%c${error}`, \"color: red;\");\n\n// create new user session\nexport const loginUser = (username, password) =>\n  fetch(loginURL, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({ user: { username: username, password: password } }),\n  }).then(parseData);\n// .catch(catchError);\n\nexport const postUser = (username, password, email) =>\n  fetch(userURL, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({\n      user: { username: username, password: password, email: email },\n    }),\n  }).then(parseData);\n\n// fetch all themes, returns promise\nexport const fetchThemes = () =>\n  fetch(themeURL).then(parseData).catch(catchError);\n\n// fetch to theme show route, return promise\nexport const fetchTheme = (id) =>\n  fetch(themeURL + id)\n    .then(parseData)\n    .catch(catchError);\n\nexport const postTheme = (name, terminalColors, promptItems) => {\n  console.log(localStorage.getItem(\"token\"));\n  fetch(themeURL, {\n    method: \"POST\",\n    headers: headersWithAuth,\n    body: JSON.stringify({\n      theme: {\n        name: name,\n        terminal_colorscheme: terminalColors,\n        prompt: promptItems,\n      },\n    }),\n  })\n    .then(parseData)\n    .catch(catchError);\n};\n","// creates and returns proper prompt for code preview\nexport const parsePromptItems = (promptItems) => {\n  let prompt = \"\";\n  promptItems.forEach((item) => {\n    if (item.type === \"username\") {\n      prompt += createZSHString(item, \"%n\");\n    } else if (item.type === \"hostname\") {\n      prompt += createZSHString(item, \"%m\");\n    } else if (item.type === \"workingDirectory\") {\n      prompt += createZSHString(item, \"%d\");\n    } else if (item.type === \"date\") {\n      prompt += createZSHString(item, \"%W\");\n    } else if (item.type === \"dayDD\") {\n      prompt += createZSHString(item, \"%w\");\n    } else if (item.type === \"militaryTime\") {\n      prompt += createZSHString(item, \"%T\");\n    } else if (item.type === \"time\") {\n      prompt += createZSHString(item, \"%t\");\n    }\n  });\n\n  return `PROMPT=\"${prompt}\"`;\n};\n\nconst createZSHString = (item, code) => {\n  let zshString = `${code}`;\n  if (item.foreground) zshString = `%F{${item.foreground}}${zshString}%f`;\n  if (item.background) zshString = `%K{${item.background}}${zshString}%k`;\n  return `${zshString} `;\n};\n\n// creates and returns a preview for selected prompt items\nexport const createPromptPreview = (promptItems) => {\n  let prompt = [];\n  promptItems.forEach((item) => {\n    if (item.type === \"username\") {\n      prompt.push({\n        style: { color: item.foreground, backgroundColor: item.background },\n        text: \"Username \",\n      });\n    } else if (item.type === \"hostname\") {\n      prompt.push({\n        style: { color: item.foreground, backgroundColor: item.background },\n        text: \"host \",\n      });\n    } else if (item.type === \"workingDirectory\") {\n      prompt.push({\n        style: { color: item.foreground, backgroundColor: item.background },\n        text: \"/Users/Name/Documents \",\n      });\n    } else if (item.type === \"date\") {\n      prompt.push({\n        style: { color: item.foreground, backgroundColor: item.background },\n        text: \"06/30/20 \",\n      });\n    } else if (item.type === \"dayDD\") {\n      prompt.push({\n        style: { color: item.foreground, backgroundColor: item.background },\n        text: \"Fri 13 \",\n      });\n    } else if (item.type === \"militaryTime\") {\n      prompt.push({\n        style: { color: item.foreground, backgroundColor: item.background },\n        text: \"20:39 \",\n      });\n    } else if (item.type === \"time\") {\n      prompt.push({\n        style: { color: item.foreground, backgroundColor: item.background },\n        text: \"06:20PM \",\n      });\n    }\n  });\n  return prompt;\n};\n\nexport const addOrRemovePromptItems = (itemArr, item) => {\n  if (itemArr.some((i) => i.type === item)) {\n    return itemArr.filter((i) => i.type !== item);\n  } else {\n    itemArr.push({ type: item });\n    return itemArr;\n  }\n};\n\nexport const createPromptItemArr = (items) => {\n  const promptArr = [];\n\n  items.forEach((item) => {\n    const background = item.colors.find(\n      (color) => color.color_type === \"background\"\n    );\n    const foreground = item.colors.find(\n      (color) => color.color_type === \"foreground\"\n    );\n    promptArr.push({\n      type: item.type,\n      background: background ? background.color : null,\n      foreground: foreground ? foreground.color : null,\n    });\n  });\n  return promptArr;\n};\n\nexport const setCheckboxes = (items) => {\n  const checkboxObj = {};\n  items.forEach((item) => (checkboxObj[item.type] = true));\n  return checkboxObj;\n};\n\nexport const addPromptColors = (colorInput, promptItems) => {\n  const [type, colorType] = colorInput.name.split(\" \");\n  const index = promptItems.findIndex((item) => item.type === type);\n  promptItems[index] = {\n    ...promptItems[index],\n    [colorType]: colorInput.value,\n  };\n\n  return promptItems;\n};\n","import React from \"react\";\nimport { createPromptPreview } from \"helpers/promptHelper\";\n\nconst PromptPreview = (props) => {\n  const promptArr = createPromptPreview(props.promptItems);\n  return (\n    <div style={{ color: props.colors[\"foreground\"] }}>\n      {promptArr.map((prompt, index) => (\n        <span key={index} style={prompt.style}>\n          {prompt.text}\n        </span>\n      ))}\n      <span>_</span>\n    </div>\n  );\n};\n\nexport default PromptPreview;\n","import React from \"react\";\n\nconst ColorPreview = (props) => {\n  return (\n    <span className=\"color\" style={{ backgroundColor: props.color }}>\n      &nbsp;\n    </span>\n  );\n};\n\nexport default ColorPreview;\n","import React from \"react\";\nimport PromptPreview from \"components/promptPreview\";\nimport ColorPreview from \"components/colorPreview\";\nimport \"styles/preview.css\";\n\nconst Preview = (props) => {\n  const { colors, promptItems } = props;\n  return (\n    <>\n      <div\n        className=\"preview\"\n        style={{ backgroundColor: colors[\"background\"] }}\n      >\n        <div id=\"tool-bar\">\n          <span></span>\n        </div>\n        <div className=\"color-container\">\n          {Object.keys(colors).map((key, index) =>\n            Number(key) + 1 ? (\n              <ColorPreview key={index} color={colors[key]} />\n            ) : null\n          )}\n        </div>\n        <PromptPreview colors={colors} promptItems={promptItems} />\n      </div>\n    </>\n  );\n};\n\nexport default Preview;\n","import React from \"react\";\n\nconst FileSelect = (props) => {\n  const { value, handleFileSelectChange } = props;\n  return (\n    <select\n      name=\"filetype\"\n      id=\"file-select\"\n      value={value}\n      onChange={handleFileSelectChange}\n    >\n      <option value=\"defualt\">select a terminal format</option>\n      <option value=\"iterm-itermcolors\">iterm</option>\n      <option value=\"guake-sh\">guake</option>\n      <option value=\"sublime-tmTheme\">sublime/textmate</option>\n      <option value=\"xresources-xresources\">xresources</option>\n      <option value=\"json-json\">json</option>\n      <option value=\"text-txt\">text</option>\n    </select>\n  );\n};\n\nexport default FileSelect;\n","import React, { useState } from \"react\";\nimport Preview from \"containers/preview\";\nimport { postTheme } from \"helpers/requests\";\nimport FileSelect from \"./fileSelect\";\n\nconst ThemeInfo = (props) => {\n  const {\n    fileName,\n    fileURL,\n    colors,\n    promptCode,\n    promptItems,\n    handleInputChange,\n    handleSubmit,\n    handleFileSelectChange,\n    fileSelect,\n  } = props;\n  const fileExtension = fileSelect ? fileSelect.split(\"-\")[1] : \"\";\n  const [saveError, setSaveError] = useState(\"\");\n  const [saveSuccess, setSaveSuccess] = useState(\"\");\n\n  const handleSave = () => {\n    postTheme(fileName, colors, promptItems)\n      .then((json) => {\n        setSaveError(\"\");\n        setSaveSuccess(\"save successful\");\n      })\n      .catch((error) => {\n        if (error.message === \"401\") {\n          setSaveError(\"login to save a theme\");\n        } else if (error.message === \"406\") {\n          setSaveError(\"invalid name\");\n        }\n        setSaveSuccess(\"\");\n      });\n  };\n\n  return (\n    <div id=\"preview-container\">\n      <div id=\"save-theme\">\n        {saveError ? <span style={{ color: \"red\" }}>{saveError}</span> : null}\n        {saveSuccess ? (\n          <span style={{ color: \"blue\" }}>{saveSuccess}</span>\n        ) : null}\n        <input\n          type=\"text\"\n          name=\"fileName\"\n          value={fileName}\n          placeholder=\"Name this theme\"\n          onChange={handleInputChange}\n        />\n        <button onClick={handleSave}>Save Theme</button>\n      </div>\n      <br />\n      <Preview colors={colors} promptItems={promptItems} />\n      <div id=\"download\">\n        <label htmlFor=\"prompt\">Add this to your ZSH file: </label>\n        <input type=\"text\" name=\"prompt\" readOnly value={promptCode} />\n        <br />\n        <FileSelect\n          value={fileSelect}\n          handleFileSelectChange={handleFileSelectChange}\n        />\n        <button onClick={handleSubmit}>Compile Theme</button>\n        <br />\n        {fileURL ? (\n          <a href={fileURL} download={`${fileName}.${fileExtension}`}>\n            Download\n          </a>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeInfo;\n","import React from \"react\";\nimport Theme from \"components/theme\";\nimport Prompt from \"components/prompt\";\nimport \"styles/build.css\";\nimport { fetchTheme } from \"helpers/requests\";\nimport {\n  addOrRemovePromptItems,\n  createPromptItemArr,\n  setCheckboxes,\n  addPromptColors,\n} from \"helpers/promptHelper\";\nimport ThemeInfo from \"components/themeInfo\";\nimport { createThemeAndFile } from \"helpers/themeHelper\";\nimport { parsePromptItems } from \"helpers/promptHelper\";\n\nclass Build extends React.Component {\n  state = {\n    renderThemeInputs: true,\n    checkboxes: {\n      username: false,\n      date: false,\n      time: false,\n    },\n    promptItems: [],\n    colors: {\n      background: \"#272822\",\n      foreground: \"#F1EBEB\",\n      0: \"#48483E\",\n      1: \"#DC2566\",\n      2: \"#8FC029\",\n      3: \"#D4C96E\",\n      4: \"#55BCCE\",\n      5: \"#9358FE\",\n      6: \"#56B7A5\",\n      7: \"#ACADA1\",\n      8: \"#76715E\",\n      9: \"#FA2772\",\n      10: \"#A7E22E\",\n      11: \"#E7DB75\",\n      12: \"#66D9EE\",\n      13: \"#AE82FF\",\n      14: \"#66EFD5\",\n      15: \"#CFD0C2\",\n    },\n  };\n\n  componentDidMount() {\n    const themeId = this.props.match.params.id;\n    if (themeId) this.setTheme(themeId);\n  }\n\n  setTheme = (id) => {\n    fetchTheme(id).then((theme) => {\n      console.log(\"theme object from database: \", theme);\n      theme.terminal_colorscheme.colors.forEach((colorObj) =>\n        this.setState({\n          colors: {\n            ...this.state.colors,\n            [colorObj.color_type]: colorObj.color,\n          },\n        })\n      );\n      this.setState({\n        promptItems: createPromptItemArr(theme.prompt_items),\n        checkboxes: setCheckboxes(theme.prompt_items),\n      });\n    });\n  };\n\n  handleInputChange = (e) => {\n    const target = e.target;\n    this.setState({ [target.name]: target.value });\n  };\n\n  handleColorChange = (color, name) => {\n    this.setState({\n      colors: { ...this.state.colors, [name]: color.hex },\n    });\n  };\n\n  handleCheckbox = (e) => {\n    const target = e.target;\n    const checkboxes = { ...this.state.checkboxes };\n\n    this.setState({\n      checkboxes: { ...checkboxes, [target.name]: !checkboxes[target.name] },\n    });\n\n    this.handlePromptItems(target);\n  };\n\n  handlePromptItems = (target) => {\n    const promptItems = addOrRemovePromptItems(\n      this.state.promptItems,\n      target.name\n    );\n    this.setState({ promptItems });\n  };\n\n  handlePromptInputs = (color, name) => {\n    // console.log(\"name:\", name);\n    // console.log(\"color:\", color);\n    const promptItems = addPromptColors({ name: name, value: color.hex }, [\n      ...this.state.promptItems,\n    ]);\n    this.setState({ promptItems });\n    // console.log(\"promptItems after colorchange: \", this.state.promptItems);\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.fileSelect) {\n      const format = this.state.fileSelect.split(\"-\")[0];\n      const fileURL = createThemeAndFile(this.state.colors, format);\n      this.setState({ fileURL });\n    }\n  };\n\n  handleBoolean = (e) => {\n    const target = e.target;\n    this.setState({ [target.name]: !this.state[target.name] });\n  };\n\n  handleFileSelectChange = (e) => {\n    const value = e.target.value;\n    console.log(\"value: \", value);\n    console.log(\"entire event\", e);\n    this.setState({ fileSelect: value });\n  };\n\n  render() {\n    const {\n      colors,\n      fileURL,\n      fileName,\n      checkboxes,\n      promptItems,\n      renderThemeInputs,\n      fileSelect,\n    } = this.state;\n    return (\n      <div id=\"build-container\">\n        <div id=\"tools\">\n          {renderThemeInputs ? (\n            <Theme\n              colors={colors}\n              fileURL={fileURL}\n              fileName={fileName}\n              handleChange={this.handleColorChange}\n            />\n          ) : (\n            <Prompt\n              checkboxes={checkboxes}\n              promptItems={promptItems}\n              handleCheckbox={this.handleCheckbox}\n              handlePromptInputs={this.handlePromptInputs}\n            />\n          )}\n          <button name=\"renderThemeInputs\" onClick={this.handleBoolean}>\n            {renderThemeInputs ? \"Show Prompt Tools\" : \"Show Terminal Tools\"}\n          </button>\n        </div>\n        <div id=\"preview\">\n          <ThemeInfo\n            fileName={fileName}\n            fileURL={fileURL}\n            fileSelect={fileSelect}\n            colors={colors}\n            promptItems={promptItems}\n            promptCode={parsePromptItems(promptItems)}\n            handleInputChange={this.handleInputChange}\n            handleSubmit={this.handleSubmit}\n            handleFileSelectChange={this.handleFileSelectChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Build;\n","import React from \"react\";\nimport Preview from \"containers/preview\";\nimport \"styles/browse.css\";\nimport { fetchThemes } from \"helpers/requests\";\nimport { createColorObj } from \"helpers/themeHelper\";\nimport { Link } from \"react-router-dom\";\nimport { createPromptItemArr } from \"helpers/promptHelper\";\n\nclass Browse extends React.Component {\n  state = {\n    search: \"\",\n    themes: [],\n  };\n\n  componentDidMount() {\n    fetchThemes().then((themes) => {\n      this.setState({ themes });\n    });\n  }\n\n  handleChange = (e) => {\n    const target = e.target;\n    this.setState({ [target.name]: target.value });\n  };\n\n  render() {\n    const filteredThemes = this.state.themes.filter((theme) =>\n      theme.theme.name.includes(this.state.search)\n    );\n    return (\n      <div id=\"browse-container\">\n        <div id=\"filter-options\">\n          {/* <label htmlFor=\"search\">Search:</label> */}\n          <input\n            name=\"search\"\n            value={this.state.search}\n            placeholder={\"Search Themes\"}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div id=\"browse\">\n          {filteredThemes.map((theme) => (\n            <div key={theme.theme.id} id=\"preview-container\">\n              <Link to={`/build/${theme.theme.id}`}>\n                <h1>{theme.theme.name}</h1>\n              </Link>\n              <Preview\n                colors={createColorObj(theme.terminal_colorscheme.colors)}\n                promptItems={createPromptItemArr(theme.prompt_items)}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Browse;\n","import React from \"react\";\n\nconst Login = (props) => {\n  const { username, password, handleInputChange, handleLogin, error } = props;\n  return (\n    <>\n      <h1>Login In</h1>\n      {error ? <p style={{ color: \"red\" }}>{error}</p> : null}\n      <form>\n        {/* <label htmlFor=\"username\">Username: </label> */}\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={username || \"\"}\n          placeholder=\"Username\"\n          onChange={handleInputChange}\n        />\n        <br />\n        {/* <label htmlFor=\"password\">Password: </label> */}\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password || \"\"}\n          placeholder=\"Password\"\n          onChange={handleInputChange}\n        />\n        <br />\n        <button onClick={handleLogin}>Login</button>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst SignUp = (props) => {\n  const {\n    newUsername,\n    email,\n    newPassword,\n    error,\n    handleInputChange,\n    handleSignUp,\n  } = props;\n\n  return (\n    <div>\n      <h1>Sign Up</h1>\n      {error ? <p style={{ color: \"red\" }}>{error}</p> : null}\n      <form>\n        {/*<label htmlFor=\"newUsername\">Username: </label>*/}\n        <input\n          type=\"text\"\n          name=\"newUsername\"\n          value={newUsername}\n          placeholder=\"Username\"\n          onChange={handleInputChange}\n        />\n        <br />\n        {/* <label htmlFor=\"email\">Email: </label> */}\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Email\"\n          onChange={handleInputChange}\n        />\n        <br />\n        {/* <label htmlFor=\"newPassword\">Password: </label> */}\n        <input\n          type=\"password\"\n          name=\"newPassword\"\n          value={newPassword}\n          placeholder=\"Password\"\n          onChange={handleInputChange}\n        />\n        <br />\n        <button onClick={handleSignUp}>Sign Up</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\n\nconst SiteInfo = () => {\n  return (\n    <div id=\"information\">\n      <p>Information about the site</p>\n    </div>\n  );\n};\n\nexport default SiteInfo;\n","import React, { useState } from \"react\";\nimport Login from \"components/login\";\nimport \"styles/welcome.css\";\nimport { useInputChange } from \"helpers/useInputChange\";\nimport { loginUser, postUser } from \"helpers/requests\";\nimport { useHistory } from \"react-router-dom\";\nimport SignUp from \"components/signup\";\nimport SiteInfo from \"components/siteInfo\";\n\nconst Welcome = () => {\n  const [input, handleInputChange] = useInputChange();\n  const history = useHistory();\n  const [loginErr, setLoginErr] = useState(\"\");\n  const [signUpErr, setSignUpErr] = useState(\"\");\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    loginUser(input.username, input.password)\n      .then((json) => {\n        localStorage.setItem(\"token\", json.jwt);\n        history.push(\"/build\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoginErr(\"username or password is incorrect\");\n      });\n  };\n\n  const handleSignUp = (e) => {\n    e.preventDefault();\n    postUser(input.newUsername, input.newPassword, input.email)\n      .then((json) => {\n        localStorage.setItem(\"token\", json.jwt);\n        history.push(\"/build\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setSignUpErr(\"invalid signup\");\n      });\n  };\n\n  return (\n    <div id=\"welcome-container\">\n      <SiteInfo />\n      <div id=\"login\">\n        <Login\n          username={input.username}\n          password={input.password}\n          error={loginErr}\n          handleInputChange={handleInputChange}\n          handleLogin={handleLogin}\n        />\n        <SignUp\n          newUsername={input.newUsername}\n          newPassword={input.newPassword}\n          email={input.email}\n          error={signUpErr}\n          handleInputChange={handleInputChange}\n          handleSignUp={handleSignUp}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import { useState } from \"react\";\n\nexport const useInputChange = () => {\n  const [input, setInput] = useState(\"\");\n\n  const handleInputChange = (e) =>\n    setInput({\n      ...input,\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n\n  return [input, handleInputChange];\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"styles/navBar.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const [token, setToken] = useState(\"\");\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    setToken(localStorage.getItem(\"token\"));\n  });\n\n  const logOut = () => {\n    localStorage.clear();\n    setToken(\"\");\n  };\n\n  return (\n    <div id=\"nav-bar\">\n      <h1>Terminal Drip</h1>\n      <nav>\n        <ul>\n          <li>\n            <Link to={\"/build\"}>Build</Link>\n          </li>\n          <li>\n            <Link to={\"/browse\"}>Browse</Link>\n          </li>\n          {!token ? (\n            <li>\n              <Link to={\"/\"}>Sign Up</Link>\n            </li>\n          ) : (\n            <Link to=\"/\">\n              <li onClick={logOut}>Log Out</li>\n            </Link>\n          )}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  // Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Build from \"containers/build\";\nimport Browse from \"components/browse\";\nimport Welcome from \"containers/welcome\";\nimport NavBar from \"components/navBar\";\nimport \"styles/app.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route path=\"/browse\" component={Browse} />\n          <Route path=\"/build/:id\" component={Build} />\n          <Route path=\"/build\" component={Build} />\n          <Route path=\"*\" component={Welcome} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter basename=\"/term-drip\">\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}